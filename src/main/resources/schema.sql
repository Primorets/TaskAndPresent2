CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255)                            NOT NULL,
    email VARCHAR(512)                            NOT NULL,
    CONSTRAINT PK_USER PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS friends_id
(
    user_id   BIGINT NOT NULL,
    friend_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE friendship_status
(
    user_id   BIGINT  NOT NULL,
    friend_id BIGINT  NOT NULL,
    status    BOOLEAN NOT NULL,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users (id)
);


CREATE TABLE IF NOT EXISTS purchases
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name             VARCHAR(2500)                           NOT NULL,
    status_purchases VARCHAR(500)                            NOT NULL,
    is_consumable    BOOLEAN                                 NOT NULL,
    buyer_id         BIGINT,
    dimension        VARCHAR(500),
    quantity         BIGINT,
    CONSTRAINT PK_PURCHASE PRIMARY KEY (id),
    CONSTRAINT FK_PURCHASE_FOR_BUYER_ID FOREIGN KEY (buyer_id) REFERENCES users (id)

);

CREATE TABLE IF NOT EXISTS events
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name         VARCHAR(255)                            NOT NULL,
    description  VARCHAR(512)                            NOT NULL,
    status_event VARCHAR(500)                            NOT NULL,
    start_date   TIMESTAMP,
    end_date     TIMESTAMP,

    CONSTRAINT PK_EVENT PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS event_purchases
(
    event_id    BIGINT NOT NULL,
    purchase_id BIGINT NOT NULL,

    CONSTRAINT PK_EVENT_ID PRIMARY KEY (event_id),
    CONSTRAINT FK_EVENT_FOR_PURCHASES_ID FOREIGN KEY (purchase_id) REFERENCES purchases (id)
);

CREATE TABLE IF NOT EXISTS event_participants
(
    event_id       BIGINT NOT NULL,
    participant_id BIGINT NOT NULL,

    CONSTRAINT PK_EVENTS PRIMARY KEY (event_id),
    CONSTRAINT FK_EVENT_FOR_PARTICIPANTS FOREIGN KEY (participant_id) REFERENCES users (id)
);